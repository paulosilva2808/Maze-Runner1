#include <SPI.h>

#include <Wire.h>

#include <Servo.h>

#define MPU 0x68  // Direccion I2C del MPU-6050


Servo ServoX, ServoY;

double AcX,AcY,AcZ;

String XYZ;

int Pitch, Roll;


void setup(){

  Serial.begin(9600);

  ServoX.attach(5);

  ServoY.attach(6);

  init_MPU(); // Inicializamos el MPU6050

}

 

void loop()

{

  FunctionsMPU(); // Adquirimos los ejex AcX, AcY, AcZ.

    

  Roll = FunctionsPitchRoll(AcX, AcZ, AcY);   //Calculo del angulo del Roll

  Pitch = FunctionsPitchRoll(AcY, AcX, AcZ);  //Calculo del angulo del Pitch

  XYZ = retornaXYZ (AcX, AcZ, AcY);

  

  int ServoRoll = map(Roll, -90, 90, 0, 179);

  int ServoPitch = map(Pitch, -90, 90, 179, 0);


  ServoX.write(ServoRoll);

  ServoY.write(ServoPitch);



  Serial.println(XYZ);


}


void init_MPU(){

  Wire.begin();

  Wire.beginTransmission(MPU);

  Wire.write(0x6B);  // PWR_MGMT_1 register

  Wire.write(0);     // Seteamos a cero (wakes up - Despertamos el MPU-6050)

  Wire.endTransmission(true);

  delay(1000);

}


//Funcion para el calculo del angulo Pitch y Roll

double FunctionsPitchRoll(double A, double B, double C){

  double DatoA, DatoB, Value;

  DatoA = A;

  DatoB = (B*B) + (C*C);

  DatoB = sqrt(DatoB);

  

  Value = atan2(DatoA, DatoB);

  Value = Value * 180/3.14;

  

  return (int)Value;

}


//Función para adquirir los ejes X, Y, Z del MPU6050

void FunctionsMPU(){

  Wire.beginTransmission(MPU);

  Wire.write(0x3B);  // Empezamos con el registro 0x3B (ACCEL_XOUT_H)

  Wire.endTransmission(false);

  Wire.requestFrom(MPU,6,true);  // requerimos un total de 6 registers

  AcX=Wire.read()<<8|Wire.read();  // 0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)     

  AcY=Wire.read()<<8|Wire.read();  // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)

  AcZ=Wire.read()<<8|Wire.read();  // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)

}


String retornaXYZ(double a, double b, double c){


  String retorno;


  String x = String (a);

  String y = String (b);

  String z = String (c);


  return (String)retorno;


  retorno = Serial.println(x + "," + y + "," + z);

  

}